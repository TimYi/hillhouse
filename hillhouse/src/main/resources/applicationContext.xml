<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"   
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
      xmlns:p="http://www.springframework.org/schema/p"   
      xmlns:context="http://www.springframework.org/schema/context"  
      xmlns:mvc="http://www.springframework.org/schema/mvc"  
      xsi:schemaLocation="  
          http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-4.1.xsd  
          http://www.springframework.org/schema/mvc  
          http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"  
      default-autowire="byType" > 
    
    <!-- 配置本地资源文件，可通过${}使用 -->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:app.properties"/> 
    
    <!-- declares support for general annotations such as @Required, @Autowired, @PostConstruct, and so on.
    <context:annotation-config/>--> 
    <!-- 注释检测范围，扫描@Component,@Service,@Controller等 -->
    <context:component-scan base-package="com.doublev2v,com.hillhouse.home"/>
    
    
    <bean id="sessionFactory"
	 	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	 	<property name="hibernateProperties">
	 		<props>
	 			<prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <!-- 不同的数据库启动时选择create\update\create-drop \false -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
	 		</props>
	 	</property>
	 	
	 	<property name="packagesToScan">
        	<list>
            	<value>com.doublev2v.*</value>
            	<value>com.hillhouse.home.*</value>
        	</list>
        </property>
	</bean>
	
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driverClassName}" />
			<property name="url" value="${jdbc.databaseurl}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="testOnBorrow" value="true" />			
			<property name="maxAge" value="10000000" />
			<property name="dbProperties">
			   <props>
			      <prop key="useUnicode">yes</prop>
			      <prop key="characterEncoding">utf8</prop>
			   </props>
			</property>
	</bean>
	
	 
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
  	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
            </props>
        </property>
   	</bean>
   	
  	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
        	<list>
	            <value>*Service</value>
	            <value>*ServiceImpl</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
  	</bean>

  	<bean class="com.doublev2v.foundation.media.LocalMediaService">
  		<property name="serverName" value="${imageServer.name}"/>
  		<property name="serverAddress" value="${imageServer.address}"/>
  		<property name="basePath" value="${imageServer.basePath}"/>
  		<property name="relativePath" value="${imageServer.relativePath}"/>
  	</bean> 

    <!-- 用来解析文件上传等multi-part请求 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
</beans>